/*
 * Copyright (C) 2014 tc
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package nars.launcher;

import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;

import nars.Global;
import nars.Video;
import nars.guifx.NARide;
import nars.guifx.demo.NARfxDefaultIterative;
import nars.nar.Default;
import nars.nario.NARio;
import nars.testchamber.TestChamber;

/**
 *
 * @author tc
 */
public class Launcher extends javax.swing.JFrame {

    public static File resource(String path) {
        return new File("./nars_lab/nars/launcher/" + path);
    }

    /**
     * Creates new form Launcher
     */
    public Launcher() {
        initComponents();

        jLabel1.setIcon(new ImageIcon("./doc/opennars_logo_without_alpha.png"));

        jLabel1.addMouseListener(new MouseAdapter()
        {
            public void mouseClicked(MouseEvent e)
            {
                jButton1.setEnabled(false);
                jButton2.setEnabled(false);
                jButton3.setEnabled(false);

                firegui = true;
            }
        });

        //this.jLabel1.setBorder(BorderFactory.createCompoundBorder(4, 4, 4, 4, Color.RED));


        this.setResizable(false);
        this.setSize(this.getWidth()-25,this.getHeight()-10);
        this.setTitle("OpenNARS Launcher");
       /* try {
            BufferedImage myPicture = ImageIO.read(resource("mario.png"));
            jLabel8.setIcon(new ImageIcon(myPicture));

        } catch (IOException ex) {
            Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
        }*/

       /* try {
            BufferedImage myPicture = ImageIO.read(resource("testchamber.png"));
            jLabel6.setIcon(new ImageIcon(myPicture));

        } catch (IOException ex) {
            Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
        }*/
      /*
        try {
            BufferedImage myPicture = ImageIO.read(resource("rover.png"));
            jLabel7.setIcon(new ImageIcon(myPicture));

        } catch (IOException ex) {
            Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            BufferedImage myPicture = ImageIO.read(resource("nartactoe.png"));
            jLabel2.setIcon(new ImageIcon(myPicture));

        } catch (IOException ex) {
            Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
        }*/

        /*try {
            BufferedImage myPicture = ImageIO.read(resource("predict.png"));
            jLabel5.setIcon(new ImageIcon(myPicture));

        } catch (IOException ex) {
            Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            BufferedImage myPicture = ImageIO.read(resource("pong.png"));
            jLabel9.setIcon(new ImageIcon(myPicture));

        } catch (IOException ex) {
            Logger.getLogger(Launcher.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jButton1.setText("OpenNARS");
        jButton1.setActionCommand("jButton1");
        jButton1.setBorderPainted(false);
        jButton1.setBackground(new Color(222,222,222));
        jButton1.setForeground(new Color(0,0,0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Website");
        jButton2.setActionCommand("jButton1");
        jButton2.setBorderPainted(false);
        jButton2.setBackground(new Color(222,222,222));
        jButton2.setForeground(new Color(0,0,0));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        this.setBackground(new Color(242,242,242));

        jButton3.setText("Test Chamber");
        //jButton3.setBorderPainted(false);
        jButton3.setBackground(new Color(222,222,222));
        jButton3.setBorderPainted(false);
        jButton3.setForeground(new Color(0,0,0));
        jButton3.setActionCommand("jButton1");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jButton1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton2)))
                                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton1)
                                        .addComponent(jButton3)
                                        .addComponent(jButton2))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>

    public static boolean firetestchamber = false;
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {

        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);

        firetestchamber = true;

      /*  Default nar = new Default(1000, 1, 1, 3);
        TestChamber chamb = new TestChamber(nar);
        NARide.show(nar.loop(30), i -> {

            //new NARSwing(nar);
            new TestChamber(nar);

        });*/

       // new TestChamber().main(null);

       /* try {
            NARServer.main(new String[]{"9999","localhost","9100","1000"});
            Desktop.getDesktop().browse(new URI("http://127.0.0.1:9999"));
        }catch(Exception ex){}*/
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {

        try{
            Desktop.getDesktop().browse(new URI("http://opennars.github.io/opennars/"));
        }catch(Exception ex){}
    }

    public static boolean firegui = false;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {

        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);

        firegui = true;
        //new NARfxDefaultIterative().main(null);
        //NARSwing sw=new NARSwing(new Default().build());

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Launcher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
     //  NARSwing.themeInvert();
        //Video.themeInvert();
        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Launcher().setVisible(true);
            }
        });*/

        Launcher launcher = new Launcher();

        Thread appThread = new Thread() {
            public void run() {
                while(!Launcher.firetestchamber && !Launcher.firegui)
                {
                    int a = 3;
                    try {
                        Thread.sleep(100);
                    }catch(Exception ex){}
                }

                if(Launcher.firegui) {
                    NARide.show(new Default(1000, 1, 1, 3).loop(), (i) -> {
                        launcher.setVisible(false);
                    });
                }
                else {
                    Default nar = new Default(1000, 1, 1, 3);
                    NARide.show(nar.loop(30), i -> {

                        //new NARSwing(nar);
                        new TestChamber(nar);
                        launcher.setVisible(false);

                    });
                }

            }
        };

        appThread.start();
        launcher.setVisible(true);



    }





    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration
}
